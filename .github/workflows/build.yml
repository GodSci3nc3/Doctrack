name: Build Doctrack App

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Instalar dependencias de la raíz primero
      - name: Install root dependencies
        run: npm install

      # Instalar y construir el frontend
      - name: Install frontend dependencies & build
        run: |
          cd client
          npm install --no-audit --no-fund
          npm run build
          cd ..

      # Verificar que el frontend está listo
      - name: Confirm dist folder exists
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            dir client\dist
          else
            ls -la client/dist
          fi
        shell: bash

      # Build específico por OS
      - name: Build for Linux
        if: runner.os == 'Linux'
        run: npx electron-builder --linux
        
      - name: Build for Windows
        if: runner.os == 'Windows'
        run: npx electron-builder --win
        
      - name: Build for macOS
        if: runner.os == 'macOS'
        run: npx electron-builder --mac

      # Subir artefactos
      - name: Upload Linux artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/*.{AppImage,deb,rpm,tar.gz}
          
      - name: Upload Windows artifacts
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/*.{exe,msi}
          
      - name: Upload macOS artifacts
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist/*.{dmg,zip}
